import{RewardMap,QLearningAgent}from"./qlearning.js";Vue.component("q-learning-tab",{template:'\n    <div id="outer">\n    <button @click="explore" type="button">Explore</button>\n    <input type="checkbox" id="q_value_checkbox" v-model="showQValues">Show Q Values<br>\n    <p>Epsilon: {{ epsilon }}</p>\n    <input type="range" min="0" max="1" value="0.5" step="0.1" class="slider" id="epsi" v-model="epsilon">\n    <p>Alpha: {{ alpha }}</p>\n    <input type="range" min="0" max="1" value="0.5" step="0.1" class="slider" id="alph" v-model="alpha">\n    <p>Gamma: {{ gamma }}</p>\n    <input type="range" min="0" max="1" value="0.7" step="0.1" class="slider" id="gamm" v-model="gamma">\n\t<div id="qlearningMap" v-bind:style="gridStyling(row, column)">\n    <template v-for="i in stringToNum(row)">\n    <div v-for="j in stringToNum(column)" :class="styleTile(i - 1, j - 1)" :id="matrixId(i - 1, j - 1)">\n    <div v-if="showQValues" class="UP"><div>{{formatValue(agent.qMatrix.matrix[matrixId(i - 1, j - 1)][0])}}</div></div>\n    <div v-if="showQValues" class="LEFT"><div>{{formatValue(agent.qMatrix.matrix[matrixId(i - 1, j - 1)][3])}}</div></div>\n    <div v-if="showQValues" class="RIGHT"><div>{{formatValue(agent.qMatrix.matrix[matrixId(i - 1, j - 1)][1])}}</div></div>\n    <div v-if="showQValues" class="DOWN"><div>{{formatValue(agent.qMatrix.matrix[matrixId(i - 1, j - 1)][2])}}</div></div>\n\t</div>\n\t</template>\n\t</div>\n\t</div>',data:function(){return{cliffs:["2x1","2x2","1x2"],reward:"2x3",start:"2x0",row:"3",column:"6",showQValues:!0,epsilon:.5,alpha:.5,gamma:.7,agent:null,movement:null,exploring:!1}},created(){this.agent=new QLearningAgent(new RewardMap(this.row,this.column,this.cliffs,this.reward),this.start)},methods:{gridStyling:function(t,i){return{gridTemplateRows:"repeat("+t+", 100px)",gridTemplateColumns:"repeat("+i+", 100px)"}},stringToNum:function(t){return parseInt(t,10)},formatValue:function(t){return 0!=t?t.toString().substring(0,6):""},matrixId:function(t,i){return t.toString()+"x"+i.toString()},styleTile:function(t,i){var e=this.matrixId(t,i),a=this.agent.map.matrix[e];return-100==a&&e==this.agent.state?"tile--robot--falling":100==a&&e==this.agent.state?"tile--robot--winning":e==this.agent.state?"tile--agent":100==a?"tile--reward":-100==a?"tile--cliff":"tile"},move:function(){this.agent.move(this.epsilon),this.agent.updateQ(this.alpha,this.gamma),this.agent.state=this.agent.nextState,this.cliffs.includes(this.agent.state)&&(console.log("AAAAWWWWW"),clearInterval(this.movement),this.exploring=!1),this.agent.state==this.reward&&(clearInterval(this.movement),this.exploring=!1)},explore:function(){0==this.exploring&&(this.agent.state=this.agent.initialPosition,this.movement=setInterval(this.move,200),this.exploring=!0)}}});